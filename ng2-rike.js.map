{"version":3,"sources":["ng2-rike.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,QAAE,EAAQ,MAAM,eAAA,CAAgB;AACvC,OAAO,EAAA,UAAE,EAAU,MAAM,eAAA,CAAgB;AACzC,OAAO,EAAA,YAAE,EAAY,MAAM,iBAAA,CAAkB;AAC7C,OAAO,EAAA,eAAE,EAAgB,WAAA,EAA6B,MAAM,oBAAA,CAAqB;AACjF,OAAO,EAAA,IAAE,EAAI,MAAM,iBAAA,CAAkB;AACrC,OAAO,EAAA,mBAAE,EAAmB,MAAM,6BAAA,CAA8B;AAChE,OAAO,EAAA,mBAAE,EAAmB,MAAM,6BAAA,CAA8B;AAEhE,OAAO,EAAA,qBAAE,EAAqB,MAAM,+BAAA,CAAgC;AACpE,OAAO,EAAA,qBAAE,EAAqB,MAAM,+BAAA,CAAgC;AACpE,OAAO,EAAA,eAAE,EAAe,MAAM,kBAAA,CAAmB;AACjD,OAAO,EAAA,eAAE,EAAe,MAAM,6BAAA,CAA8B;AAC5D,OAAO,EAAA,cAAE,EAAc,MAAM,4BAAA,CAA6B;AAE1D,cAAc,+BAAA,CAAgC;AAC9C,cAAc,4BAAA,CAA6B;AAC3C,cAAc,6BAAA,CAA8B;AAC5C,cAAc,kBAAA,CAAmB;AACjC,cAAc,kCAAA,CAAmC;AACjD,cAAc,wBAAA,CAAyB;AACvC,cAAc,oBAAA,CAAqB;AACnC,cAAc,qBAAA,CAAsB;AACpC,cAAc,+BAAA,CAAgC;AAC9C,cAAc,qBAAA,CAAsB;AACpC,cAAc,8BAAA,CAA+B;AAC7C,cAAc,iBAAA,CAAkB;AAChC,cAAc,6BAAA,CAA8B;AAC5C,cAAc,6BAAA,CAA8B;AAE5C;;GAEG;AAEH;IAAA;IAsEA,CAAC;IApEG;;;;;;;;;;;;;;;;;;;;OAoBG;IACI,oBAAS,GAAhB,UAAiB,OAAyB;QACtC,MAAM,CAAC;YACH,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,WAAW;oBACpB,QAAQ,EAAE,IAAI,eAAe,CAAC,OAAO,CAAC;iBACzC;aACJ;SACJ,CAAA;IACL,CAAC;IAqCL,iBAAC;AAAD,CAtEA,AAsEC;;AAnCM,qBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACrB,OAAO,EAAE;oBACL,YAAY;oBACZ,UAAU;iBACb;gBACD,SAAS,EAAE;oBACP,IAAI;oBACJ;wBACI,eAAe;wBACf,cAAc;wBACd;4BACI,OAAO,EAAE,eAAe;4BACxB,KAAK,EAAE,IAAI;4BACX,WAAW,EAAE,IAAI;yBACpB;qBACJ;iBACJ;gBACD,YAAY,EAAE;oBACV,mBAAmB;oBACnB,mBAAmB;oBACnB,qBAAqB;oBACrB,qBAAqB;iBACxB;gBACD,OAAO,EAAE;oBACL,mBAAmB;oBACnB,mBAAmB;oBACnB,qBAAqB;oBACrB,qBAAqB;iBACxB;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"ng2-rike.js","sourceRoot":"","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {HttpModule} from \"@angular/http\";\nimport {CommonModule} from \"@angular/common\";\nimport {BaseRikeOptions, RikeOptions, RikeOptionsArgs} from \"./ng2-rike/options\";\nimport {Rike} from \"./ng2-rike/rike\";\nimport {RikeStatusComponent} from \"./ng2-rike/status.component\";\nimport {RikeErrorsComponent} from \"./ng2-rike/errors.component\";\nimport {provideEventSource} from \"./ng2-rike/event-source-provider\";\nimport {RikeDisabledDirective} from \"./ng2-rike/disabled.directive\";\nimport {RikeReadonlyDirective} from \"./ng2-rike/readonly.directive\";\nimport {RikeEventSource} from \"./ng2-rike/event\";\nimport {StatusCollector} from \"./ng2-rike/status-collector\";\nimport {ErrorCollector} from \"./ng2-rike/error-collector\";\n\nexport * from \"./ng2-rike/disabled.directive\";\nexport * from \"./ng2-rike/error-collector\";\nexport * from \"./ng2-rike/errors.component\";\nexport * from \"./ng2-rike/event\";\nexport * from \"./ng2-rike/event-source-provider\";\nexport * from \"./ng2-rike/field-error\";\nexport * from \"./ng2-rike/options\";\nexport * from \"./ng2-rike/protocol\";\nexport * from \"./ng2-rike/readonly.directive\";\nexport * from \"./ng2-rike/resource\";\nexport * from \"./ng2-rike/resource-provider\";\nexport * from \"./ng2-rike/rike\";\nexport * from \"./ng2-rike/status-collector\";\nexport * from \"./ng2-rike/status.component\";\n\n/**\n * REST-like services module.\n */\n\nexport class RikeModule {\n\n    /**\n     * Configures Rike.\n     *\n     * Can be used in `@NgModule` as following:\n     * ```typescript\n     * @NgModule({\n     *   imports: [\n     *     RikeModule.configure({\n     *       baseUrl: '/application/base',\n     *       defaultProtocol: CUSTOM_PROTOCOL,\n     *     })\n     *   ]\n     * })\n     * export class MyModule {\n     * }\n     * ```\n     *\n     * @param options default Rike options.\n     *\n     * @return a value that can be inserted into `imports` section of `NgModule`\n     */\n    static configure(options?: RikeOptionsArgs): any {\n        return {\n            ngModule: RikeModule,\n            providers: [\n                {\n                    provide: RikeOptions,\n                    useValue: new BaseRikeOptions(options),\n                }\n            ]\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        HttpModule,\n    ],\n    providers: [\n        Rike,\n        [\n            StatusCollector,\n            ErrorCollector,\n            {\n                provide: RikeEventSource,\n                multi: true,\n                useExisting: Rike,\n            },\n        ],\n    ],\n    declarations: [\n        RikeStatusComponent,\n        RikeErrorsComponent,\n        RikeDisabledDirective,\n        RikeReadonlyDirective,\n    ],\n    exports: [\n        RikeStatusComponent,\n        RikeErrorsComponent,\n        RikeDisabledDirective,\n        RikeReadonlyDirective,\n    ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}