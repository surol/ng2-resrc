{"version":3,"file":"ng2-rike.js","sourceRoot":"","sources":["ng2-rike.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe;OAC/B,EAAC,UAAU,EAAC,MAAM,eAAe;OACjC,EAAC,YAAY,EAAC,MAAM,iBAAiB;OACrC,EAAC,WAAW,EAAE,eAAe,EAAkB,MAAM,oBAAoB;OACzE,EAAC,IAAI,EAAC,MAAM,iBAAiB;OAC7B,EAAC,mBAAmB,EAAC,MAAM,6BAA6B;OACxD,EAAC,mBAAmB,EAAC,MAAM,6BAA6B;OACxD,EAAC,kBAAkB,EAAC,MAAM,kCAAkC;AAEnE,cAAc,4BAA4B,CAAC;AAC3C,cAAc,6BAA6B,CAAC;AAC5C,cAAc,kBAAkB,CAAC;AACjC,cAAc,kCAAkC,CAAC;AACjD,cAAc,wBAAwB,CAAC;AACvC,cAAc,oBAAoB,CAAC;AACnC,cAAc,qBAAqB,CAAC;AACpC,cAAc,qBAAqB,CAAC;AACpC,cAAc,8BAA8B,CAAC;AAC7C,cAAc,iBAAiB,CAAC;AAChC,cAAc,6BAA6B,CAAC;AAC5C,cAAc,6BAA6B,CAAC;AAE5C;;GAEG;AAmBH;IAAA;IAmCA,CAAC;IAjCG;;;;;;;;;;;;;;;;;;;;OAoBG;IACI,oBAAS,GAAhB,UAAiB,OAAyB;QACtC,MAAM,CAAC;YACH,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,WAAW;oBACpB,QAAQ,EAAE,IAAI,eAAe,CAAC,OAAO,CAAC;iBACzC;aACJ;SACJ,CAAA;IACL,CAAC;IAnDL;QAAC,QAAQ,CAAC;YACN,OAAO,EAAE;gBACL,YAAY;gBACZ,UAAU;aACb;YACD,SAAS,EAAE;gBACP,IAAI;gBACJ,kBAAkB,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC;aAC1C;YACD,YAAY,EAAE;gBACV,mBAAmB;gBACnB,mBAAmB;aACtB;YACD,OAAO,EAAE;gBACL,mBAAmB;gBACnB,mBAAmB;aACtB;SACJ,CAAC;;kBAAA;IAoCF,iBAAC;AAAD,CAAC,AAnCD,IAmCC","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {HttpModule} from \"@angular/http\";\nimport {CommonModule} from \"@angular/common\";\nimport {RikeOptions, BaseRikeOptions, RikeOptionsArgs} from \"./ng2-rike/options\";\nimport {Rike} from \"./ng2-rike/rike\";\nimport {RikeStatusComponent} from \"./ng2-rike/status.component\";\nimport {RikeErrorsComponent} from \"./ng2-rike/errors.component\";\nimport {provideEventSource} from \"./ng2-rike/event-source-provider\";\n\nexport * from \"./ng2-rike/error-collector\";\nexport * from \"./ng2-rike/errors.component\";\nexport * from \"./ng2-rike/event\";\nexport * from \"./ng2-rike/event-source-provider\";\nexport * from \"./ng2-rike/field-error\";\nexport * from \"./ng2-rike/options\";\nexport * from \"./ng2-rike/protocol\";\nexport * from \"./ng2-rike/resource\";\nexport * from \"./ng2-rike/resource-provider\";\nexport * from \"./ng2-rike/rike\";\nexport * from \"./ng2-rike/status-collector\";\nexport * from \"./ng2-rike/status.component\";\n\n/**\n * REST-like services module.\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpModule,\n    ],\n    providers: [\n        Rike,\n        provideEventSource({useExisting: Rike}),\n    ],\n    declarations: [\n        RikeStatusComponent,\n        RikeErrorsComponent,\n    ],\n    exports: [\n        RikeStatusComponent,\n        RikeErrorsComponent,\n    ],\n})\nexport class RikeModule {\n\n    /**\n     * Configures Rike.\n     *\n     * Can be used in `@NgModule` as following:\n     * ```typescript\n     * @NgModule({\n     *   imports: [\n     *     RikeModule.configure({\n     *       baseUrl: '/application/base',\n     *       defaultProtocol: CUSTOM_PROTOCOL,\n     *     })\n     *   ]\n     * })\n     * export class MyModule {\n     * }\n     * ```\n     *\n     * @param options default Rike options.\n     *\n     * @return a value that can be inserted into `imports` section of `NgModule`\n     */\n    static configure(options?: RikeOptionsArgs): any {\n        return {\n            ngModule: RikeModule,\n            providers: [\n                {\n                    provide: RikeOptions,\n                    useValue: new BaseRikeOptions(options),\n                }\n            ]\n        }\n    }\n\n}\n"]}