{"version":3,"file":"status.component.js","sourceRoot":"","sources":["status.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, OnDestroy} from \"@angular/core\";\nimport {StatusCollector, StatusView, DEFAULT_STATUS_LABELS, StatusLabelMap} from \"./status-collector\";\nimport {isArray} from \"rxjs/util/isArray\";\n\n@Component({\n    selector: 'rike-status,[rikeStatus],[rikeStatusLabels],[rikeStatusLabelText],[rikeStatusLabelClass]',\n    template: `<span class=\"rike-status-icon\"></span> {{text}}`,\n    host: {\n        \"[class]\": \"cssClass\",\n    }\n})\nexport class RikeStatusComponent<L> implements OnDestroy {\n\n    private _statusLabels?: StatusLabelMap<L> | StatusLabelMap<L>[];\n    private _statusView?: StatusView<L>;\n    private _ownStatusView = false;\n    private _labelText: (label: L) => string = defaultLabelText;\n    private _labelClass: (status: StatusView<L>) => string = defaultStatusClass;\n\n    constructor(private _collector: StatusCollector) {\n    }\n\n    get collector(): StatusCollector {\n        return this._collector;\n    }\n\n    get statusView(): StatusView<L> {\n        if (this._statusView) {\n            return this._statusView;\n        }\n\n        this._statusView = this.createStatusView();\n        this._ownStatusView = true;\n\n        return this._statusView;\n    }\n\n    get rikeStatus(): StatusView<L> | undefined {\n        return this._statusView;\n    }\n\n    @Input()\n    set rikeStatus(statusView: StatusView<L> | undefined) {\n        if (statusView === this._statusView) {\n            return;\n        }\n        this.releaseStatusView();\n        this._statusView = statusView;\n    }\n\n    get rikeStatusLabels(): StatusLabelMap<L> | StatusLabelMap<L>[] | undefined {\n        return this._statusLabels;\n    }\n\n    @Input()\n    set rikeStatusLabels(labels: StatusLabelMap<L> | StatusLabelMap<L>[] | undefined) {\n        this._statusView = undefined;\n        this._statusLabels = labels;\n    }\n\n    get rikeStatusLabelText(): (label: L) => string {\n        return this._labelText;\n    }\n\n    @Input()\n    set rikeStatusLabelText(value: (label: L) => string) {\n        this._labelText = value;\n    }\n\n    get rikeStatusLabelClass(): (status: StatusView<L>) => string {\n        return this._labelClass;\n    }\n\n    @Input()\n    set rikeStatusLabelClass(value: (status: StatusView<L>) => string) {\n        this._labelClass = value;\n    }\n\n    get cssClass(): string {\n        return this._labelClass(this.statusView);\n    }\n\n    get text(): string | undefined {\n\n        const labels = this.statusView.labels;\n\n        if (!labels.length) {\n            return undefined;\n        }\n\n        let text = \"\";\n\n        for (let label of labels) {\n\n            const t = this.rikeStatusLabelText(label);\n\n            if (text) {\n                text += \", \";\n            }\n            text += t;\n        }\n        if (this.statusView.processing) {\n            text += \"...\";\n        }\n\n        return text;\n    }\n\n    ngOnDestroy() {\n        this.releaseStatusView();\n    }\n\n    protected createStatusView(): StatusView<L> {\n\n        const labels = this.rikeStatusLabels;\n\n        if (labels) {\n            if (!isArray(labels)) {\n                return this.collector.view(labels);\n            }\n            if (labels.length) {\n                return this.collector.view(...labels);\n            }\n        }\n\n        return this.collector.view((DEFAULT_STATUS_LABELS as any) as StatusLabelMap<L>);\n    }\n\n    private releaseStatusView() {\n\n        const statusView = this._statusView;\n\n        if (statusView) {\n            this._statusView = undefined;\n            if (this._ownStatusView) {\n                statusView.close();\n            }\n        }\n    }\n\n}\n\nfunction defaultLabelText(label: any): string  {\n    if (typeof label === \"string\") {\n        return label;\n    }\n\n    const defaultLabel = label as {message?: string};\n\n    if (defaultLabel.message) {\n        return defaultLabel.message;\n    }\n\n    return label.toString();\n}\n\n\nfunction defaultStatusClass<L>(status: StatusView<L>): string {\n\n    const labels = status.labels;\n\n    if (!labels.length) {\n        return \"rike-status rike-status-hidden\";\n    }\n\n    let result = processingTypeClass(status);\n\n    for (let label of labels) {\n\n        const defaultLabel = label as {id?: string; cssClass?: string};\n        const cssClass = defaultLabel.cssClass;\n\n        if (cssClass) {\n            result += \" \" + cssClass;\n            continue;\n        }\n\n        const id = defaultLabel.id;\n\n        if (id) {\n            result += \" rike-status-\" + id;\n        }\n    }\n\n    return result;\n}\n\nfunction processingTypeClass(status: StatusView<any>) {\n    if (status.processing) {\n        return \"rike-status rike-status-processing\";\n    }\n    if (status.cancelled) {\n        return \"rike-status rike-status-cancelled\";\n    }\n    if (status.failed) {\n        return \"rike-status rike-status-failed\";\n    }\n    if (status.succeed) {\n        return \"rike-status rike-status-succeed\";\n    }\n    return \"rike-status rike-status-hidden\";\n}\n\n"]}