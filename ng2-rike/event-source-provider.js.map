{"version":3,"file":"event-source-provider.js","sourceRoot":"","sources":["event-source-provider.ts"],"names":[],"mappings":"OACO,EAAC,eAAe,EAAC,MAAM,SAAS;OAChC,EAAC,eAAe,EAAC,MAAM,oBAAoB;OAC3C,EAAC,cAAc,EAAC,MAAM,mBAAmB;AAEhD;;;;;;;;;;GAUG;AACH,mCAAmC,EAOlC;QAPmC,sBAAQ,EAAE,sBAAQ,EAAE,4BAAW,EAAE,0BAAU,EAAE,cAAI;IAQjF,MAAM,CAAC;QACH,eAAe;QACf,cAAc;QACd;YACI,OAAO,EAAE,eAAe;YACxB,KAAK,EAAE,IAAI;YACX,kBAAQ;YACR,kBAAQ;YACR,wBAAW;YACX,sBAAU;YACV,UAAI;SACP;KACJ,CAAC;AACN,CAAC","sourcesContent":["import {Type} from \"@angular/core\";\nimport {RikeEventSource} from \"./event\";\nimport {StatusCollector} from \"./status-collector\";\nimport {ErrorCollector} from \"./error-collector\";\n\n/**\n * Constructs provider recipe for {{RikeEventSource}}.\n *\n * @param useClass\n * @param useValue\n * @param useExisting\n * @param useFactory\n * @param deps\n *\n * @return new provider recipe.\n */\nexport function provideEventSource({useClass, useValue, useExisting, useFactory, deps}: {\n    useClass?: Type<any>;\n    useValue?: any;\n    useExisting?: any;\n    useFactory?: Function;\n    deps?: Object[];\n    multi?: boolean;\n}): any[] {\n    return [\n        StatusCollector,\n        ErrorCollector,\n        {\n            provide: RikeEventSource,\n            multi: true,\n            useClass,\n            useValue,\n            useExisting,\n            useFactory,\n            deps,\n        },\n    ];\n}\n"]}