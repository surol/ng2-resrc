{"version":3,"file":"errors.component.js","sourceRoot":"","sources":["errors.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, OnInit, OnDestroy, Optional} from \"@angular/core\";\nimport {ErrorCollector, ErrorSubscription} from \"./error-collector\";\nimport {FieldErrors, FieldError} from \"./field-error\";\n\n@Component({\n    selector: '[rikeErrors],[rikeErrorsOf]',\n    template:\n    `\n    <ul class=\"rike-error-list\" *ngIf=\"errors.length\">\n        <li class=\"rike-error\" *ngFor=\"let error of errors\">{{error.message}}</li>\n    </ul>\n    `,\n    host: {\n        \"[class.rike-errors]\": \"true\"\n    }\n})\nexport class RikeErrorsComponent implements OnInit, OnDestroy {\n\n    private _field?: string;\n    private _errors: FieldError[] = [];\n    private _initialized = false;\n    private _subscription?: ErrorSubscription;\n\n    constructor(@Optional() private _collector?: ErrorCollector) {\n    }\n\n    get rikeErrors(): string | undefined {\n        return this._field;\n    }\n\n    @Input()\n    set rikeErrors(field: string | undefined) {\n        if (this._field === field) {\n            return;\n        }\n        this._field = field;\n        this.reinit();\n    }\n\n    get errorCollector(): ErrorCollector {\n        return this._collector || (this._collector = this.createCollector());\n    }\n\n    get rikeErrorsOf(): ErrorCollector | undefined {\n        return this._collector;\n    }\n\n    @Input()\n    set rikeErrorsOf(collector: ErrorCollector | undefined) {\n        if (this._collector === collector) {\n            return;\n        }\n        this._collector = collector;\n        this.reinit();\n    }\n\n    get errors(): FieldError[] {\n        return this._errors;\n    }\n\n    ngOnInit() {\n        this._initialized = true;\n        this.subscribe();\n    }\n\n    ngOnDestroy() {\n        this._initialized = false;\n        this.unsubscribe();\n    }\n\n    //noinspection JSMethodCanBeStatic\n    protected createCollector(): ErrorCollector {\n        return new ErrorCollector();\n    }\n\n    protected updateErrors(errors: FieldErrors) {\n\n        const list: FieldError[] = [];\n\n        for (let field in errors) {\n            if (errors.hasOwnProperty(field)) {\n                list.push(...errors[field]);\n            }\n        }\n\n        this._errors = list;\n    }\n\n    private reinit() {\n        if (this._initialized) {\n            this.unsubscribe();\n            this.subscribe();\n        }\n    }\n\n    private subscribe() {\n        if (this._field) {\n            this._subscription =\n                this.errorCollector.subscribe(this._field, errors => this.updateErrors(errors)).refresh();\n        } else {\n            this._subscription =\n                this.errorCollector.subscribeForRest(errors => this.updateErrors(errors)).refresh();\n        }\n    }\n\n    private unsubscribe() {\n        this._errors = [];\n\n        const subscription = this._subscription;\n\n        if (subscription) {\n            delete this._subscription;\n            subscription.unsubscribe();\n        }\n    }\n\n}\n"]}